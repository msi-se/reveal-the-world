name: Update infrastucture
on: [push]

env:
  ARM_USE_MSI: true
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  ORG_NAME: ${{ secrets.ORG_NAME }}
  REPO_NAME: ${{ secrets.REPO_NAME }}


jobs: 
  build-and-deploy-datastore:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Terraform
        id: terraform
        working-directory: deployement/datastore-deployment
        run: |
          terraform init
          terraform plan -out datastore.tfplan
          terraform apply datastore.tfplan
          echo "MONGODB_URI=$(terraform output -raw cosmos_connection_string)" >> "$GITHUB_OUTPUT"
          echo "POSTGRESQL_FQDN=$(terraform output -raw posgresql_fqdn)" >> "$GITHUB_OUTPUT"
          echo "POSTGRESQL_ROOT_USERNAME=$(terraform output -raw posgresql_admin_username)" >> "$GITHUB_OUTPUT"
          echo "POSTGRESQL_ROOT_PASSWORD=$(terraform output -raw posgresql_admin_password)" >> "$GITHUB_OUTPUT"
          echo "REGISTRY_PASSWORD=$(terraform output -raw acr_token)" >> "$GITHUB_OUTPUT"
          echo "REGISTRY_USERNAME=$(terraform output -raw acr_token_name)" >> "$GITHUB_OUTPUT"
          echo "REGISTRY=$(terraform output -raw acr_server_name)" >> "$GITHUB_OUTPUT"
          echo "REGISTRY_ID=$(terraform output -raw acr_id)" >> "$GITHUB_OUTPUT"

      - name: Update Github actions secrets
        working-directory: deployement
        run: |
          declare -A keys
          keys["POSTGRESQL_FQDN"]=${{ steps.terraform.outputs.POSTGRESQL_FQDN }}
          keys["REGISTRY"]=${{ steps.terraform.outputs.REGISTRY }}
          
          public_key_info=$(curl -H "Authorization: token $ACCESS_TOKEN" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/$ORG_NAME/$REPO_NAME/actions/secrets/public-key)
          public_key_value=$(echo "$public_key_info" | jq -r '.key')
          public_key_id=$(echo "$public_key_info" | jq -r '.key_id')
          for credential in "${!keys[@]}"; do
            keys[$credential]=$(python3 encrypt-secret.py ${keys[$credential]} $public_key_value)
            echo '{"encrypted_value":"'${keys[$credential]}'","key_id":"'$public_key_id'"}' > body.json
            curl -L -X PUT -H "Accept: application/vnd.github+json" -H "Authorization: Bearer $ACCESS_TOKEN" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/$ORG_NAME/$REPO_NAME/actions/secrets/$credential -d @body.json
          done

          test=${{ secrets.REGISTRY }}
          echo $test